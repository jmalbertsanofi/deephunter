name: fixture - Update deephunter/install/fixtures/threatactor-mitre_att&ck.json

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Automatic execution every day
  schedule:
     - cron: "0 */24 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pull-data"
  pull-data:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests pyyaml openpyxl

      # Runs a set of commands using the runners shell
      - name: Run a multi-line Python script
        run: |
         python - <<'EOF'
         import pandas as pd
         import requests
         import yaml
         import os

         url_xlsx = "https://attack.mitre.org/docs/enterprise-attack-v16.1/enterprise-attack-v16.1-groups.xlsx"
         response = requests.get(url_xlsx)
         with open("enterprise-attack-v16.1-groups.xlsx", "wb") as file:
             file.write(response.content)

         groups_df = pd.read_excel("enterprise-attack-v16.1-groups.xlsx")

         with open("deephunter/install/fixtures/threatactors.yml", "r") as file:
             threat_actor_data = yaml.safe_load(file)

         next_pk = max(entry['pk'] for entry in threat_actor_data) + 1

         for _, group in groups_df.iterrows():
             exists = any(entry['fields']['name'].lower() == group['name'].lower() for entry in threat_actor_data)
             if not exists:
                 new_entry = {
                     'model': 'qm.threatactor',
                     'pk': next_pk,
                     'fields': {
                         'name': group['name'],
                         'aka_name': group['associated groups'] if pd.notnull(group['associated groups']) else '',
                         'source_country': 1,
                         'references': group['url']
                     }
                  }
                 threat_actor_data.append(new_entry)
                 next_pk += 1

         with open("deephunter/install/fixtures/threatactors.yml", "w") as file:
             yaml.dump(threat_actor_data, file, default_flow_style=False, sort_keys=False)

         os.remove("enterprise-attack-v16.1-groups.xlsx")

         print("Updated YAML file created successfully and Excel file removed.")
         EOF

      # Commit updated data to repo
      - uses: stefanzweifel/git-auto-commit-action@v5.0.1
